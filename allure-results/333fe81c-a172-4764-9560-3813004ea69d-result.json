{"name": "Listing Page", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_INTERNET_DISCONNECTED\n  (Session info: chrome=126.0.6478.127)\nStacktrace:\n0   chromedriver                        0x000000010f28a088 chromedriver + 5169288\n1   chromedriver                        0x000000010f281f5a chromedriver + 5136218\n2   chromedriver                        0x000000010edfe36c chromedriver + 402284\n3   chromedriver                        0x000000010edf60e7 chromedriver + 368871\n4   chromedriver                        0x000000010ede5a44 chromedriver + 301636\n5   chromedriver                        0x000000010ede705a chromedriver + 307290\n6   chromedriver                        0x000000010ede5cea chromedriver + 302314\n7   chromedriver                        0x000000010ede52b9 chromedriver + 299705\n8   chromedriver                        0x000000010ede525b chromedriver + 299611\n9   chromedriver                        0x000000010ede3303 chromedriver + 291587\n10  chromedriver                        0x000000010ede361a chromedriver + 292378\n11  chromedriver                        0x000000010ee00dc7 chromedriver + 413127\n12  chromedriver                        0x000000010ee8eb95 chromedriver + 994197\n13  chromedriver                        0x000000010ee6eab2 chromedriver + 862898\n14  chromedriver                        0x000000010ee8df57 chromedriver + 991063\n15  chromedriver                        0x000000010ee6e853 chromedriver + 862291\n16  chromedriver                        0x000000010ee3e5c6 chromedriver + 665030\n17  chromedriver                        0x000000010ee3ee4e chromedriver + 667214\n18  chromedriver                        0x000000010f24cca0 chromedriver + 4918432\n19  chromedriver                        0x000000010f251c9d chromedriver + 4938909\n20  chromedriver                        0x000000010f252375 chromedriver + 4940661\n21  chromedriver                        0x000000010f22dd84 chromedriver + 4791684\n22  chromedriver                        0x000000010f252669 chromedriver + 4941417\n23  chromedriver                        0x000000010f21f554 chromedriver + 4732244\n24  chromedriver                        0x000000010f272838 chromedriver + 5072952\n25  chromedriver                        0x000000010f2729f7 chromedriver + 5073399\n26  chromedriver                        0x000000010f281b0e chromedriver + 5135118\n27  libsystem_pthread.dylib             0x00007ff805d9e4e1 _pthread_start + 125\n28  libsystem_pthread.dylib             0x00007ff805d99f6b thread_start + 15", "trace": "self = <CrawlReport.Test_Crawl object at 0x120892280>\n\n    @allure.title(\"Listing Page\")\n    @allure.description('Check Listing page')\n    def test_listpage(self):\n        crawl = Web_List_Page()\n>       crawl.browser()\n\nReports/CrawlReport.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/launch.py:47: in browser\n    self.driver.get(url)\nvenv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\nvenv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x10e7d1340>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_INTERNET_DISCONNECTED\\\\...ff805d9e4e1 _pthread_start + 125\\\\n28  libsystem_pthread.dylib             0x00007ff805d99f6b thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_INTERNET_DISCONNECTED\nE         (Session info: chrome=126.0.6478.127)\nE       Stacktrace:\nE       0   chromedriver                        0x000000010f28a088 chromedriver + 5169288\nE       1   chromedriver                        0x000000010f281f5a chromedriver + 5136218\nE       2   chromedriver                        0x000000010edfe36c chromedriver + 402284\nE       3   chromedriver                        0x000000010edf60e7 chromedriver + 368871\nE       4   chromedriver                        0x000000010ede5a44 chromedriver + 301636\nE       5   chromedriver                        0x000000010ede705a chromedriver + 307290\nE       6   chromedriver                        0x000000010ede5cea chromedriver + 302314\nE       7   chromedriver                        0x000000010ede52b9 chromedriver + 299705\nE       8   chromedriver                        0x000000010ede525b chromedriver + 299611\nE       9   chromedriver                        0x000000010ede3303 chromedriver + 291587\nE       10  chromedriver                        0x000000010ede361a chromedriver + 292378\nE       11  chromedriver                        0x000000010ee00dc7 chromedriver + 413127\nE       12  chromedriver                        0x000000010ee8eb95 chromedriver + 994197\nE       13  chromedriver                        0x000000010ee6eab2 chromedriver + 862898\nE       14  chromedriver                        0x000000010ee8df57 chromedriver + 991063\nE       15  chromedriver                        0x000000010ee6e853 chromedriver + 862291\nE       16  chromedriver                        0x000000010ee3e5c6 chromedriver + 665030\nE       17  chromedriver                        0x000000010ee3ee4e chromedriver + 667214\nE       18  chromedriver                        0x000000010f24cca0 chromedriver + 4918432\nE       19  chromedriver                        0x000000010f251c9d chromedriver + 4938909\nE       20  chromedriver                        0x000000010f252375 chromedriver + 4940661\nE       21  chromedriver                        0x000000010f22dd84 chromedriver + 4791684\nE       22  chromedriver                        0x000000010f252669 chromedriver + 4941417\nE       23  chromedriver                        0x000000010f21f554 chromedriver + 4732244\nE       24  chromedriver                        0x000000010f272838 chromedriver + 5072952\nE       25  chromedriver                        0x000000010f2729f7 chromedriver + 5073399\nE       26  chromedriver                        0x000000010f281b0e chromedriver + 5135118\nE       27  libsystem_pthread.dylib             0x00007ff805d9e4e1 _pthread_start + 125\nE       28  libsystem_pthread.dylib             0x00007ff805d99f6b thread_start + 15\n\nvenv/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException"}, "description": "Check Listing page", "attachments": [{"name": "stdout", "source": "0c383b7a-5ccd-4e02-83cf-782f14d33cb2-attachment.txt", "type": "text/plain"}], "start": 1720960864595, "stop": 1720960864888, "uuid": "17830ce1-8fb2-470b-8aae-aeb56796f9ba", "historyId": "7394d44d4d66f8bd0c54e4cb32ebaf97", "testCaseId": "7394d44d4d66f8bd0c54e4cb32ebaf97", "fullName": "Reports.CrawlReport.Test_Crawl#test_listpage", "labels": [{"name": "severity", "value": "normal"}, {"name": "parentSuite", "value": "Reports"}, {"name": "suite", "value": "CrawlReport"}, {"name": "subSuite", "value": "Test_Crawl"}, {"name": "host", "value": "Pro66.local"}, {"name": "thread", "value": "97407-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Reports.CrawlReport"}]}